USE [DM_YG1]
GO

/****** Object:  StoredProcedure [dm_yg1_scm].[PROC_FACT_SCM_SUPPLY_SIMULATION_PIVOT]    Script Date: 2025-07-25 오후 12:40:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





/****************************************************************************************************************
SP 명		: PROC_FACT_SCM_SUPPLY_SIMULATION_PIVOT
SP 제목		: 조달생산가시화 PIVOT 테이블 입력 쿼리
최초작성자	: 최은수
최초작성일	: 2024.09.22
SP 실행 예	: EXEC PROC_FACT_SCM_SUPPLY_SIMULATION_TB_ROUTING 0
			  SELECT *	FROM dm_yg1_fin.FACT_SCM_SUPPLY_SIMULATION_TB_ROUTING 
SP 설명		: 조달생산가시화 PIVOT 테이블


변경이력		: 변경일/변경자/요청자/요청일/내용	
			 

	
******************************************************************************************************************/
CREATE   PROCEDURE [dm_yg1_scm].[PROC_FACT_SCM_SUPPLY_SIMULATION_PIVOT]

AS
BEGIN

	
	--공통변수
	DECLARE @SP_START_EXEC		DATETIME = GETDATE()	-- SP 실행시작시간
	DECLARE @INSERT_CNT	INT = 0			-- INSERT 건수
	DECLARE @UPDATE_CNT	INT = 0			-- UPDATE 건수
	DECLARE @DELETE_CNT	INT = 0			-- DELETE 건수
	DECLARE	@TABLE_NM	VARCHAR(50) = 'FACT_SCM_SUPPLY_SIMULATION_PIVOT'	-- TARGET TABLE NAME
	DECLARE @ERR_MSG	VARCHAR(4000)
	DECLARE @ERR_NUM	NVARCHAR(20)
	DECLARE @ERR_LINE	INT

	
	
	DECLARE @COMPANY_CD	VARCHAR(12)	= '1000'	-- 회사코드 (SAP 필드명 : BUKRS) 

	BEGIN TRY

	DELETE FROM DM_YG1.dm_yg1_scm.FACT_SCM_SUPPLY_SIMULATION_PIVOT
	WHERE SAP_LOAD_DATE IN (SELECT ERSDA
	FROM DW_YG1.scm.TB_DW_DIM_ZDWT005_COOIS WITH(NOLOCK)
	WHERE ERSDA=(SELECT MAX(ERSDA) FROM  DW_YG1.scm.TB_DW_DIM_ZDWT005_COOIS WITH(NOLOCK))
	)
	SET @DELETE_CNT=@@ROWCOUNT


		
INSERT INTO dm_yg1_scm.FACT_SCM_SUPPLY_SIMULATION_PIVOT
	SELECT 
	A.MANDT AS CLIENT,
	A.ERSDA AS SAP_LOAD_DATE,
	A.AUFNR AS PO,
	A.MATNR AS MATERIAL,
	B.MATNR1 AS BOM_MATERIAL,
	B.KTSCH AS CURRENT_TEXT_KEY,
	B.KTEXT,
	WC.[GROUP],
	B.SSELD AS CURRENT_WORK_INPUT_DATE,
	CASE WHEN B.SSELD>'00000000' THEN  '투입'
	ELSE '미투입' END as "OPER_INPUT_YN",
	PSMNG AS QTY,
	INV.BDMNG AS REQMTS_QTY,
	BOM.MTART,
	CASE WHEN BOM.MTART='ROH' THEN '원자재'
	WHEN BOM.MTART='HALB' OR BOM.MTART='FERT' THEN '반제품'
	WHEN B.MATNR=B.MATNR1 THEN '재연마' 
	ELSE '재연마' END AS BOM_TYPE ,
	A.MATKL,
	CASE WHEN P.AUFNR IS NOT NULL THEN '투입(GMPS)'
	ELSE NULL END AS "BOM_INPUT_YN",
	SUP.PLAN_RDD AS RDD,
	SUP.AUDAT_RDD as [RDD_6주],
	DATEPART(WEEK,SUP.PLAN_RDD) AS RDD_WEEK,
	convert(varchar,B.AUFNR)+'/'+convert(varchar,B.GLTRP) AS OPERATION_KEY,
	CASE WHEN A.STAT LIKE '%GMPS%' THEN '투입(GMPS)' ELSE '자재출고' END AS [SYSTEM_STATUS],

	INV.MENGE AS INV_QTY,
	
B1.VORNR	VORNR1,	B1.KTSCH	KTSCH1,	B1.LTXA1	WORKNAME01,	B1.GSTRI	GSTRI1,	B1.VGW01	SETUP_TIME01	,	B1.VGW02	CYCLE_TIME_01	,
B2.VORNR	VORNR2,	B2.KTSCH	KTSCH2,	B2.LTXA1	WORKNAME02,	B2.GSTRI	GSTRI2,	B2.VGW01	SETUP_TIME02	,	B2.VGW02	CYCLE_TIME_02	,
B3.VORNR	VORNR3,	B3.KTSCH	KTSCH3,	B3.LTXA1	WORKNAME03,	B3.GSTRI	GSTRI3,	B3.VGW01	SETUP_TIME03	,	B3.VGW02	CYCLE_TIME_03	,
B4.VORNR	VORNR4,	B4.KTSCH	KTSCH4,	B4.LTXA1	WORKNAME04,	B4.GSTRI	GSTRI4,	B4.VGW01	SETUP_TIME04	,	B4.VGW02	CYCLE_TIME_04	,
B5.VORNR	VORNR5,	B5.KTSCH	KTSCH5,	B5.LTXA1	WORKNAME05,	B5.GSTRI	GSTRI5,	B5.VGW01	SETUP_TIME05	,	B5.VGW02	CYCLE_TIME_05	,
B6.VORNR	VORNR6,	B6.KTSCH	KTSCH6,	B6.LTXA1	WORKNAME06,	B6.GSTRI	GSTRI6,	B6.VGW01	SETUP_TIME06	,	B6.VGW02	CYCLE_TIME_06	,
B7.VORNR	VORNR7,	B7.KTSCH	KTSCH7,	B7.LTXA1	WORKNAME07,	B7.GSTRI	GSTRI7,	B7.VGW01	SETUP_TIME07	,	B7.VGW02	CYCLE_TIME_07	,
B8.VORNR	VORNR8,	B8.KTSCH	KTSCH8,	B8.LTXA1	WORKNAME08,	B8.GSTRI	GSTRI8,	B8.VGW01	SETUP_TIME08	,	B8.VGW02	CYCLE_TIME_08	,
B9.VORNR	VORNR9,	B9.KTSCH	KTSCH9,	B9.LTXA1	WORKNAME09,	B9.GSTRI	GSTRI9,	B9.VGW01	SETUP_TIME09	,	B9.VGW02	CYCLE_TIME_09	,
B10.VORNR	VORNR10,	B10.KTSCH	KTSCH10,	B10.LTXA1	WORKNAME10,	B10.GSTRI	GSTRI10,	B10.VGW01	SETUP_TIME10	,	B10.VGW02	CYCLE_TIME_10	,
B11.VORNR	VORNR11,	B11.KTSCH	KTSCH11,	B11.LTXA1	WORKNAME11,	B11.GSTRI	GSTRI11,	B11.VGW01	SETUP_TIME11	,	B11.VGW02	CYCLE_TIME_11	,
B12.VORNR	VORNR12,	B12.KTSCH	KTSCH12,	B12.LTXA1	WORKNAME12,	B12.GSTRI	GSTRI12,	B12.VGW01	SETUP_TIME12	,	B12.VGW02	CYCLE_TIME_12	,
B13.VORNR	VORNR13,	B13.KTSCH	KTSCH13,	B13.LTXA1	WORKNAME13,	B13.GSTRI	GSTRI13,	B13.VGW01	SETUP_TIME13	,	B13.VGW02	CYCLE_TIME_13	,
B14.VORNR	VORNR14,	B14.KTSCH	KTSCH14,	B14.LTXA1	WORKNAME14,	B14.GSTRI	GSTRI14,	B14.VGW01	SETUP_TIME14	,	B14.VGW02	CYCLE_TIME_14	,
B15.VORNR	VORNR15,	B15.KTSCH	KTSCH15,	B15.LTXA1	WORKNAME15,	B15.GSTRI	GSTRI15,	B15.VGW01	SETUP_TIME15	,	B15.VGW02	CYCLE_TIME_15	,
B16.VORNR	VORNR16,	B16.KTSCH	KTSCH16,	B16.LTXA1	WORKNAME16,	B16.GSTRI	GSTRI16,	B16.VGW01	SETUP_TIME16	,	B16.VGW02	CYCLE_TIME_16	,
B17.VORNR	VORNR17,	B17.KTSCH	KTSCH17,	B17.LTXA1	WORKNAME17,	B17.GSTRI	GSTRI17,	B17.VGW01	SETUP_TIME17	,	B17.VGW02	CYCLE_TIME_17	,
B18.VORNR	VORNR18,	B18.KTSCH	KTSCH18,	B18.LTXA1	WORKNAME18,	B18.GSTRI	GSTRI18,	B18.VGW01	SETUP_TIME18	,	B18.VGW02	CYCLE_TIME_18	,
B19.VORNR	VORNR19,	B19.KTSCH	KTSCH19,	B19.LTXA1	WORKNAME19,	B19.GSTRI	GSTRI19,	B19.VGW01	SETUP_TIME19	,	B19.VGW02	CYCLE_TIME_19	,
B20.VORNR	VORNR20,	B20.KTSCH	KTSCH20,	B20.LTXA1	WORKNAME20,	B20.GSTRI	GSTRI20,	B20.VGW01	SETUP_TIME20	,	B20.VGW02	CYCLE_TIME_20	,
B21.VORNR	VORNR21,	B21.KTSCH	KTSCH21,	B21.LTXA1	WORKNAME21,	B21.GSTRI	GSTRI21,	B21.VGW01	SETUP_TIME21	,	B21.VGW02	CYCLE_TIME_21	,
B22.VORNR	VORNR22,	B22.KTSCH	KTSCH22,	B22.LTXA1	WORKNAME22,	B22.GSTRI	GSTRI22,	B22.VGW01	SETUP_TIME22	,	B22.VGW02	CYCLE_TIME_22	,
B23.VORNR	VORNR23,	B23.KTSCH	KTSCH23,	B23.LTXA1	WORKNAME23,	B23.GSTRI	GSTRI23,	B23.VGW01	SETUP_TIME23	,	B23.VGW02	CYCLE_TIME_23	,
B24.VORNR	VORNR24,	B24.KTSCH	KTSCH24,	B24.LTXA1	WORKNAME24,	B24.GSTRI	GSTRI24,	B24.VGW01	SETUP_TIME24	,	B24.VGW02	CYCLE_TIME_24	,
B25.VORNR	VORNR25,	B25.KTSCH	KTSCH25,	B25.LTXA1	WORKNAME25,	B25.GSTRI	GSTRI25,	B25.VGW01	SETUP_TIME25	,	B25.VGW02	CYCLE_TIME_25	,
B26.VORNR	VORNR26,	B26.KTSCH	KTSCH26,	B26.LTXA1	WORKNAME26,	B26.GSTRI	GSTRI26,	B26.VGW01	SETUP_TIME26	,	B26.VGW02	CYCLE_TIME_26	,
B27.VORNR	VORNR27,	B27.KTSCH	KTSCH27,	B27.LTXA1	WORKNAME27,	B27.GSTRI	GSTRI27,	B27.VGW01	SETUP_TIME27	,	B27.VGW02	CYCLE_TIME_27	,
B28.VORNR	VORNR28,	B28.KTSCH	KTSCH28,	B28.LTXA1	WORKNAME28,	B28.GSTRI	GSTRI28,	B28.VGW01	SETUP_TIME28	,	B28.VGW02	CYCLE_TIME_28	,
B29.VORNR	VORNR29,	B29.KTSCH	KTSCH29,	B29.LTXA1	WORKNAME29,	B29.GSTRI	GSTRI29,	B29.VGW01	SETUP_TIME29	,	B29.VGW02	CYCLE_TIME_29	,
B30.VORNR	VORNR30,	B30.KTSCH	KTSCH30,	B30.LTXA1	WORKNAME30,	B30.GSTRI	GSTRI30,	B30.VGW01	SETUP_TIME30	,	B30.VGW02	CYCLE_TIME_30	,
@SP_START_EXEC	AS ETL_DATE
	FROM (SELECT *
	FROM DW_YG1.scm.TB_DW_DIM_ZDWT005_COOIS WITH(NOLOCK)
	WHERE DISPO NOT LIKE 'CO%'
	AND ERSDA=(SELECT MAX(ERSDA) FROM  DW_YG1.scm.TB_DW_DIM_ZDWT005_COOIS WITH(NOLOCK))
	) A
	LEFT OUTER JOIN DW_YG1.scm.TB_DW_FACT_ZDWT006_Z25PP031 B WITH(NOLOCK)
	ON  1=1
		AND A.MANDT=B.MANDT
		AND A.ERSDA=B.ERSDA
		AND A.AUFNR=B.AUFNR
	LEFT OUTER JOIN DW_YG1.scm.TB_SCM_WORKCENTER C WITH(NOLOCK)
	ON B.KTSCH=C.StdTextKey
	LEFT OUTER JOIN DW_YG1.DBO.TB_DW_DIM_MARA BOM WITH(NOLOCK)
	ON  1=1
		AND B.MATNR1=BOM.MATNR 
		AND B.MANDT=BOM.MANDT
	LEFT OUTER JOIN (
	SELECT DISTINCT MANDT,AUFNR ,ERSDA
	FROM DW_YG1.scm.TB_DW_FACT_ZDWT009_Z25MM001  WITH(NOLOCK)) P
	ON 1=1
		AND A.MANDT=B.MANDT 
		AND A.AUFNR=P.AUFNR 
		AND A.ERSDA=P.ERSDA
	LEFT OUTER JOIN (SELECT DISTINCT  MANDT,ERSDA,AUFNR,MATNR,AUDAT,AUDAT_RDD,PLAN_RDD
FROM DW_YG1.SCM.TB_DW_FACT_SCM_SUPPLY_SIMULATION_RESULT  WITH(NOLOCK)) SUP
	ON  1=1
		AND A.AUFNR=SUP.AUFNR 
		AND A.MANDT=SUP.MANDT 
		AND A.ERSDA=SUP.ERSDA -- AND SUP.CHECK_TYPE IS NULL
	LEFT OUTER JOIN DW_YG1.scm.TB_SCM_WORKCENTER WC WITH(NOLOCK)
	ON B.KTSCH=WC.StdTextKey
	LEFT OUTER JOIN ( SELECT MANDT,ERSDA,MATNR,AUFNR,SUM(MENGE) AS MENGE, SUM(BDMNG) AS BDMNG
						FROM DW_YG1.scm.TB_DW_FACT_ZDWT009_Z25MM001 WITH(NOLOCK)
						GROUP BY AUFNR,MANDT,ERSDA,MATNR) as INV
	ON  1=1
		AND A.ERSDA=INV.ERSDA 
		AND A.MANDT=INV.MANDT 
		AND A.AUFNR=INV.AUFNR 
		AND A.IDNRK=INV.MATNR

LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0  WITH(NOLOCK)	WHERE APLZL=1) 	B1 	ON	 A.AUFNR=B1.AUFNR 	AND A.MANDT=B1.MANDT	 AND A.ERSDA=B1.ERSDA 	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0  WITH(NOLOCK)	WHERE APLZL=2)	B2	ON	 A.AUFNR=B2.AUFNR	AND A.MANDT=B2.MANDT	 AND A.ERSDA=B2.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=3)	B3	ON	 A.AUFNR=B3.AUFNR	AND A.MANDT=B3.MANDT	 AND A.ERSDA=B3.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=4)	B4	ON	 A.AUFNR=B4.AUFNR	AND A.MANDT=B4.MANDT	 AND A.ERSDA=B4.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=5)	B5	ON	 A.AUFNR=B5.AUFNR	AND A.MANDT=B5.MANDT	 AND A.ERSDA=B5.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=6)	B6	ON	 A.AUFNR=B6.AUFNR	AND A.MANDT=B6.MANDT	 AND A.ERSDA=B6.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=7)	B7	ON	 A.AUFNR=B7.AUFNR	AND A.MANDT=B7.MANDT	 AND A.ERSDA=B7.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=8)	B8	ON	 A.AUFNR=B8.AUFNR	AND A.MANDT=B8.MANDT	 AND A.ERSDA=B8.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=9)	B9	ON	 A.AUFNR=B9.AUFNR	AND A.MANDT=B9.MANDT	 AND A.ERSDA=B9.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=10)	B10	ON	 A.AUFNR=B10.AUFNR	AND A.MANDT=B10.MANDT	 AND A.ERSDA=B10.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=11)	B11	ON	 A.AUFNR=B11.AUFNR	AND A.MANDT=B11.MANDT	 AND A.ERSDA=B11.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=12)	B12	ON	 A.AUFNR=B12.AUFNR	AND A.MANDT=B12.MANDT	 AND A.ERSDA=B12.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=13)	B13	ON	 A.AUFNR=B13.AUFNR	AND A.MANDT=B13.MANDT	 AND A.ERSDA=B13.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=14)	B14	ON	 A.AUFNR=B14.AUFNR	AND A.MANDT=B14.MANDT	 AND A.ERSDA=B14.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=15)	B15	ON	 A.AUFNR=B15.AUFNR	AND A.MANDT=B15.MANDT	 AND A.ERSDA=B15.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=16)	B16	ON	 A.AUFNR=B16.AUFNR	AND A.MANDT=B16.MANDT	 AND A.ERSDA=B16.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=17)	B17	ON	 A.AUFNR=B17.AUFNR	AND A.MANDT=B17.MANDT	 AND A.ERSDA=B17.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=18)	B18	ON	 A.AUFNR=B18.AUFNR	AND A.MANDT=B18.MANDT	 AND A.ERSDA=B18.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=19)	B19	ON	 A.AUFNR=B19.AUFNR	AND A.MANDT=B19.MANDT	 AND A.ERSDA=B19.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=20)	B20	ON	 A.AUFNR=B20.AUFNR	AND A.MANDT=B20.MANDT	 AND A.ERSDA=B20.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=21)	B21	ON	 A.AUFNR=B21.AUFNR	AND A.MANDT=B21.MANDT	 AND A.ERSDA=B21.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=22)	B22	ON	 A.AUFNR=B22.AUFNR	AND A.MANDT=B22.MANDT	 AND A.ERSDA=B22.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=23)	B23	ON	 A.AUFNR=B23.AUFNR	AND A.MANDT=B23.MANDT	 AND A.ERSDA=B23.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=24)	B24	ON	 A.AUFNR=B24.AUFNR	AND A.MANDT=B24.MANDT	 AND A.ERSDA=B24.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=25)	B25	ON	 A.AUFNR=B25.AUFNR	AND A.MANDT=B25.MANDT	 AND A.ERSDA=B25.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=26)	B26	ON	 A.AUFNR=B26.AUFNR	AND A.MANDT=B26.MANDT	 AND A.ERSDA=B26.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=27)	B27	ON	 A.AUFNR=B27.AUFNR	AND A.MANDT=B27.MANDT	 AND A.ERSDA=B27.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=28)	B28	ON	 A.AUFNR=B28.AUFNR	AND A.MANDT=B28.MANDT	 AND A.ERSDA=B28.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=29)	B29	ON	 A.AUFNR=B29.AUFNR	AND A.MANDT=B29.MANDT	 AND A.ERSDA=B29.ERSDA	
LEFT OUTER JOIN (SELECT * FROM DW_YG1.scm.VW_TB_DW_FACT_ZDWT005_ROUTING_TB_APLZL_STARTWITH_0 WITH(NOLOCK)	WHERE APLZL=30)	B30	ON	 A.AUFNR=B30.AUFNR	AND A.MANDT=B30.MANDT	 AND A.ERSDA=B30.ERSDA	

	
	
	SET @INSERT_CNT=@@ROWCOUNT

	
	UPDATE dm_yg1_scm.FACT_SCM_SUPPLY_SIMULATION_TB_ROUTING

	SET REMAINED_LT=0
	WHERE REMAINED_LT<0
	SET @UPDATE_CNT=@@ROWCOUNT




		INSERT INTO DW_YG1.DBO.TB_ETL_LOG
					(DB_NM			, SP_NM							, TABLE_NM		, START_DATE		, END_DATE		
					, INSERT_CNT	, DELETE_CNT	, UPDATE_CNT	, SUCCEESS_YN	, ERR_MSG			, ERR_NUM	, ERR_LINE)
			VALUES	(DB_NAME()		, OBJECT_NAME(@@PROCID)			, @TABLE_NM		, @SP_START_EXEC	, GETDATE()
					, @INSERT_CNT	, @DELETE_CNT	, @UPDATE_CNT	, 'Y'			, NULL				, NULL		, NULL)
			
	END TRY

	BEGIN CATCH
			
		SET @ERR_MSG	= ERROR_MESSAGE()
		SET @ERR_NUM	= ERROR_NUMBER()
		SET @ERR_LINE	= ERROR_LINE()

		PRINT	@ERR_MSG
		
		INSERT INTO DW_YG1.DBO.TB_ETL_LOG
				(DB_NM			, SP_NM							, TABLE_NM		, START_DATE		, END_DATE		
				, INSERT_CNT	, DELETE_CNT	, UPDATE_CNT	, SUCCEESS_YN	, ERR_MSG			, ERR_NUM		, ERR_LINE)
		VALUES	(DB_NAME()		, OBJECT_NAME(@@PROCID)			, @TABLE_NM		, @SP_START_EXEC	, GETDATE()
				, @INSERT_CNT	, @DELETE_CNT	, @UPDATE_CNT	, 'N'			, ERROR_MESSAGE()	, ERROR_NUMBER(), ERROR_LINE());
	END CATCH
END
GO


