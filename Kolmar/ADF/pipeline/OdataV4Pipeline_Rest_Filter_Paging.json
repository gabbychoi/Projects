{
	"name": "OdataV4Pipeline_Rest_Filter_Paging",
	"properties": {
		"activities": [
			{
				"name": "set endpoint",
				"description": "url 뒤에 붙을 엔드포인트 설정 변수\n포트번호 뒤에 /로 시작하는 엔드포인트 값 작성\n",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "endpoint",
					"value": "/sap/opu/odata4/sap/zfi_odata_v4/srvd/sap/zfi_odata_v4/0001/PA_PLAN_SUM"
				}
			},
			{
				"name": "SETfilter",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "filter",
					"value": {
						"value": "@concat('GJAHR eq ''',pipeline().parameters.fiscyearper,''' ')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup KSTARS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup KSTARS').output.value",
						"type": "Expression"
					},
					"batchCount": 5,
					"activities": [
						{
							"name": "call rowcount",
							"description": "Odata V4 기반증분  데이터 행 수 출력작업을 합니다.",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"url": {
									"value": "@concat(pipeline().globalParameters.SAPOdata_PS_URL,variables('endpoint'),'/$count?$filter=',variables('filter'),' and (',item().condition,')')",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "MAVEN-SHIR",
									"type": "IntegrationRuntimeReference"
								},
								"authentication": {
									"type": "Basic",
									"username": "RFC_BI",
									"password": {
										"type": "AzureKeyVaultSecret",
										"store": {
											"referenceName": "ADF_Keyvault",
											"type": "LinkedServiceReference"
										},
										"secretName": "ADF-SAP-Key"
									}
								}
							}
						},
						{
							"name": "record_rowcount",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "call rowcount",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[PROC_TB_ADF_ETL_COUNT_VALIDATION_LOG]",
								"storedProcedureParameters": {
									"HTTP_CALL_COUNT": {
										"value": {
											"value": "@activity('call rowcount').output.Response",
											"type": "Expression"
										},
										"type": "String"
									},
									"PIPELINE_NAME": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"PIPELINE_RUNID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"TARGET_TABLE": {
										"value": "TB_SAP_ODATA_PA_PLAN_SUM",
										"type": "String"
									},
									"ADDITIONAL_CONDITION": {
										"value": {
											"value": "@item().setname",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MAVENSQLMI",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If Condition",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "call rowcount",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "record_rowcount",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('call rowcount').output.Response,'0')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Odata Copy",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "BAK_SCRIPT_FIRST",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "RestSource",
												"httpRequestTimeout": "00:01:40",
												"requestInterval": "00.00:00:00.010",
												"requestMethod": "GET",
												"paginationRules": {
													"AbsoluteUrl": "$['@odata.nextLink']"
												}
											},
											"sink": {
												"type": "SqlMISink",
												"preCopyScript": {
													"value": "@concat('DELETE FROM TB_SAP_ODATA_PA_PLAN_SUM\nWHERE GJAHR=',pipeline().parameters.fiscyearper,'\nAND ',item().VALIDWHERE_RFC)",
													"type": "Expression"
												},
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"path": "['KOKRS']"
														},
														"sink": {
															"name": "KOKRS",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['GJAHR']"
														},
														"sink": {
															"name": "GJAHR",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['OBJNR']"
														},
														"sink": {
															"name": "OBJNR",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['WRTTP']"
														},
														"sink": {
															"name": "WRTTP",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['KSTAR']"
														},
														"sink": {
															"name": "KSTAR",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['WERKS']"
														},
														"sink": {
															"name": "WERKS",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['VKORG']"
														},
														"sink": {
															"name": "VKORG",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['KNDNR']"
														},
														"sink": {
															"name": "KNDNR",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['PRCTR']"
														},
														"sink": {
															"name": "PRCTR",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['VKGRP']"
														},
														"sink": {
															"name": "VKGRP",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['VKBUR']"
														},
														"sink": {
															"name": "VKBUR",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['PAPH1']"
														},
														"sink": {
															"name": "PAPH1",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['PAPH2']"
														},
														"sink": {
															"name": "PAPH2",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['PAPH3']"
														},
														"sink": {
															"name": "PAPH3",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['currency']"
														},
														"sink": {
															"name": "currency",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['WERKS_T']"
														},
														"sink": {
															"name": "WERKS_T",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['KNDNR_T']"
														},
														"sink": {
															"name": "KNDNR_T",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['KTEXT']"
														},
														"sink": {
															"name": "KTEXT",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['vkgrp_T']"
														},
														"sink": {
															"name": "vkgrp_T",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['vkbur_T']"
														},
														"sink": {
															"name": "vkbur_T",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['WKG001']"
														},
														"sink": {
															"name": "WKG001",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG002']"
														},
														"sink": {
															"name": "WKG002",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG003']"
														},
														"sink": {
															"name": "WKG003",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG004']"
														},
														"sink": {
															"name": "WKG004",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG005']"
														},
														"sink": {
															"name": "WKG005",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG006']"
														},
														"sink": {
															"name": "WKG006",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG007']"
														},
														"sink": {
															"name": "WKG007",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG008']"
														},
														"sink": {
															"name": "WKG008",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG009']"
														},
														"sink": {
															"name": "WKG009",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG010']"
														},
														"sink": {
															"name": "WKG010",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG011']"
														},
														"sink": {
															"name": "WKG011",
															"type": "Decimal"
														}
													},
													{
														"source": {
															"path": "['WKG012']"
														},
														"sink": {
															"name": "WKG012",
															"type": "Decimal"
														}
													}
												],
												"collectionReference": "$['value']"
											}
										},
										"inputs": [
											{
												"referenceName": "REST_SAP_ODATA",
												"type": "DatasetReference",
												"parameters": {
													"Endpoint": "@concat(variables('endpoint'),'?$filter=',variables('filter'),' and (',item().condition,')&$top=',activity('call rowcount').output.Response)"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ADF_DW_DATASET",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": "dbo",
													"table_name": "TB_SAP_ODATA_PA_PLAN_SUM"
												}
											}
										]
									},
									{
										"name": "ETL Valid Record",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Odata Copy",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "MAVENSQLMI",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"type": "Query",
													"text": {
														"value": "@concat('\nUPDATE [dbo].[TB_ADF_ETL_COUNT_VALIDATION_LOG] SET [DATA_COPY_COUNT]=(SELECT COUNT(1) FROM [dbo].[TB_SAP_ODATA_PA_PLAN_SUM] WHERE ',item().VALIDWHERE_RFC,' AND GJAHR =',pipeline().parameters.fiscyearper,' ) WHERE [PIPELINE_RUNID]=''',pipeline().RunId,''' AND ADDITIONAL_CONDITION=''',item().setname,'''')",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "BAK_SCRIPT_FIRST",
										"type": "Script",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "MAVENSQLMI",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"type": "Query",
													"text": {
														"value": "@concat('DROP TABLE IF EXISTS dbo.[TB_SAP_ODATA_PA_PLAN_SUM_',item().setname,pipeline().RunId,'] \n\nSELECT * INTO  dbo.[TB_SAP_ODATA_PA_PLAN_SUM_',item().setname,pipeline().RunId,'] \nFROM dbo.TB_SAP_ODATA_PA_PLAN_SUM\nWHERE GJAHR=',pipeline().parameters.fiscyearper,' AND ',item().VALIDWHERE_RFC)",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "DROP BAK",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Odata Copy",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "MAVENSQLMI",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"type": "Query",
													"text": {
														"value": "@concat('DROP TABLE IF EXISTS dbo.[TB_SAP_ODATA_PA_PLAN_SUM_',item().setname,pipeline().RunId,']')",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "Failure_Script",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Odata Copy",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "MAVENSQLMI",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"type": "Query",
													"text": {
														"value": "@concat('\nINSERT INTO dbo.TB_SAP_ODATA_PA_PLAN_SUM\nSELECT * \nFROM dbo.[TB_SAP_ODATA_PA_PLAN_SUM_',item().setname,pipeline().RunId,']'\n)",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "DROP BAK_Failure",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Failure_Script",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "MAVENSQLMI",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"type": "Query",
													"text": {
														"value": "@concat('DROP TABLE IF EXISTS dbo.[TB_SAP_ODATA_PA_PLAN_SUM_',item().setname,pipeline().RunId,']')",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Lookup KSTARS",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SETfilter",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Copy KSTARS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": "\nWITH NumberedRows AS (\n    SELECT\n         KSTAR -- 계정명\n        ,ROW_NUMBER() OVER (ORDER BY KSTAR) AS RowNum -- 페이징 설정을 위한 Rownum 고정 작업\n    FROM TB_SAP_ODATA_KSTARS_PLAN\n),\nGroupedRows AS (\n    SELECT\n         KSTAR -- KSTAR \n        ,(RowNum - 1) / 30 AS GroupNum -- 30개씩 묶기 위한 몫 산출 작업\n    FROM NumberedRows\n)\n\n\n\nSELECT\n     ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS setname -- 세트 명\n    ,'KSTAR eq ' + STRING_AGG(CONCAT('''',KSTAR,''''), ' or KSTAR eq ')  AS condition -- Filter condition or 기반 Odata 기본 채택\n\t,'KSTAR IN ('+STRING_AGG(CONCAT('''',KSTAR,''''), ',')+')' as VALIDWHERE_RFC  --Filter Condition In 기반 RFC 필요시 채택.\n\nFROM GroupedRows\nGROUP BY\t\n\tGroupNum;",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ADF_DW_DATASET",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "sys",
							"table_name": "tables"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Copy KSTARS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "set endpoint",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"AbsoluteUrl": "$['@odata.nextLink']"
						}
					},
					"sink": {
						"type": "SqlMISink",
						"preCopyScript": "drop table if exists TB_SAP_ODATA_KSTARS_PLAN",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['KSTAR']"
								},
								"sink": {
									"name": "KSTAR"
								}
							}
						],
						"collectionReference": "$['value']"
					}
				},
				"inputs": [
					{
						"referenceName": "REST_SAP_ODATA",
						"type": "DatasetReference",
						"parameters": {
							"Endpoint": "/sap/opu/odata4/sap/zfi_odata_v4/srvd/sap/zfi_odata_v4/0001/PA_PLAN_SUM?$apply=groupby((KSTAR))&$top=100000"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ADF_DW_DATASET",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "TB_SAP_ODATA_KSTARS_PLAN"
						}
					}
				]
			}
		],
		"parameters": {
			"fiscyearper": {
				"type": "string"
			}
		},
		"variables": {
			"endpoint": {
				"type": "String"
			},
			"rowcount": {
				"type": "String"
			},
			"filter": {
				"type": "String"
			},
			"setname": {
				"type": "String"
			},
			"wah": {
				"type": "String"
			}
		},
		"folder": {
			"name": "PipelineTemplate"
		},
		"annotations": [],
		"lastPublishTime": "2025-06-29T04:57:58Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}